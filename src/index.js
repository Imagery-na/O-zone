'use strict';

function toggleCheckbox() {
    const checkbox = document.querySelectorAll('.filter-check_checkbox');
    for (let i = 0; i < checkbox.length; i++) {
        checkbox[i].addEventListener('change', function () {
            if (this.checked) {
                this.nextElementSibling.classList.add('checked');
                console.log('–≥–∞–ª–æ—á–∫–∞ —Å—Ç–æ–∏—Ç');
            } else {
                this.nextElementSibling.classList.remove('checked');
                console.log('–≥–∞–ª–æ—á–∫—É —É–±—Ä–∞–ª–∏');
            }
        });
    }
}

function toggleCart() {
    const btnCart = document.getElementById('cart');
    const modalCart = document.querySelector('.cart');
    const closeBtn = document.querySelector('.cart-close');
    btnCart.addEventListener('click', () => {
        modalCart.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });
    closeBtn.addEventListener('click', () => {
        modalCart.style.display = 'none';
        document.body.style.overflow = ''; //–Ω–µ —Å–∫—Ä–æ–ª–ª–∏—Ç—Å—è
    });
}

function workCart() {
    const cards = document.querySelectorAll('.goods .card'); //–≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∫–ª–∞—Å—Å–æ–º card, –ª–µ–∂–∞—â–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ goods
    const cartWrapper = document.querySelector('.cart-wrapper'),
        cartEmpty = document.getElementById('cart-empty'),
        countGoods = document.querySelector('.counter');

    cards.forEach((card) => {
        const btn = card.querySelector('button');
        btn.addEventListener('click', () => {
            const cardClone = card.cloneNode(true);
            cartWrapper.appendChild(cardClone);
            showData();
            const removeBtn = cardClone.querySelector('.btn');
            removeBtn.textContent = '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã';
            removeBtn.addEventListener('click', () => {
                cardClone.remove();
                showData();
            });
        });

    });

    function showData() {
        const cardsCart = cartWrapper.querySelectorAll('.card'),
            cardsPrice = cartWrapper.querySelectorAll('.card-price'), // –≤—Å–µ —Ü–µ–Ω—ã
            cardTotal = document.querySelector('.cart-total span'); // —Å—Ç—Ä–æ–∫–∞ —Å –æ–±—â–µ–π —Å—É–º–º–æ–π
        let sum = 0;
        countGoods.textContent = cardsCart.length;
        cardsPrice.forEach((cardPrice) => {
            let price = parseFloat(cardPrice.textContent);
            sum += price;
        });
        cardTotal.textContent = sum;
        if (cardsCart.length !== 0) {
            cartEmpty.remove();
        } else {
            cartWrapper.appendChild(cartEmpty);
        }
    }
}

// —Ñ–∏–ª—å—Ç—Ä—ã, –ø–æ–∏—Å–∫
function actionPage(){
    const cards = document.querySelectorAll('.goods .card'), // –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    discountCheckbox = document.getElementById('discount-checkbox'),
    min = document.getElementById('min'),  //–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –≤ —Ñ–∏–ª—å—Ç—Ä–µ
    max = document.getElementById('max'),
    search = document.querySelector('.search-wrapper_input'),  
    searchBtn = document.querySelector('.search-btn');

    discountCheckbox.addEventListener('click', filter); //—Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏
    min.addEventListener('change', filter); //—Ñ–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
    max.addEventListener('change', filter);

   //–ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
    searchBtn.addEventListener('click', ()=>{    // –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ñ–æ—Ä–º–∞ –∏ –∏–Ω–ø—É—Ç, –ª—É—á—à–µ –±—ã–ª–æ –±—ã —Å–æ–±—ã—Ç–∏–µ submit
        const searchText = new RegExp(search.value.trim(), 'i'); //—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ,trim —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã,i - —Ä–µ–≥–∏—Å—Ç—Ä
        cards.forEach((card)=> {
            const title = card.querySelector('.card-title');
            if(!searchText.test(title.textContent)){
                card.parentNode.style.display = 'none';
            }
            else{
                card.parentNode.style.display = '';
            }
        });
        search.value = '';
    });  // –¥–æ–±–∞–≤–∏—Ç—å –¥–ª—è —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –µ–Ω—Ç–µ—Ä
}

function filter(){
    const cards = document.querySelectorAll('.goods .card'), // –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    discountCheckbox = document.getElementById('discount-checkbox'),
    min = document.getElementById('min'),  //–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –≤ —Ñ–∏–ª—å—Ç—Ä–µ
    max = document.getElementById('max'),
    activeLi = document.querySelector('.catalog-list li.active');

    cards.forEach((card) => {
        const cardPrice = card.querySelector('.card-price');
        const price = parseFloat(cardPrice.textContent),
        discount = card.querySelector('.card-sale');
        card.parentNode.style.display = '';
        if((min.value && price < min.value) || (max.value && price > max.value)){
            card.parentNode.style.display = 'none';
        }
        else if (discountCheckbox.checked && !discount){
            card.parentNode.style.display = 'none';
        }
        else if(activeLi && card.dataset.category !== activeLi.textContent){
            card.parentNode.style.display = 'none';
        }
    });   
  }
 //–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function getData(){
    const goodsWrapper = document.querySelector('.goods');
    return fetch('../db/db.json') 
        .then((response) => {
            if(response.ok){
                return response.json();
            }
            else{
                throw new Error ('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã. –û—à–∏–±–∫–∞: ' + response.status);
            }
        })
        .then(data => {return (data);})
        .catch(err => {
            console.warn(err);
           //goodsWrapper.innerHTML = '<div style = "color: red; font-size: 30px;" >–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</div>';
        });
}
// –≤—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
function renderCards(data){
    const goodsWrapper = document.querySelector('.goods');
    data.goods.forEach((good) => {
        const card = document.createElement('div');
        card.className ='col-12 col-md-6 col-lg-4 col-xl-3';
        card.innerHTML = `
                                <div class="card" data-category="${good.category}">
                                ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''}									
									<div class="card-img-wrapper">
										<span class="card-img-top"
											style="background-image: url('${good.img}')"></span>
									</div>
									<div class="card-body justify-content-between">
										<div class="card-price"> ${good.price} ‚ÇΩ</div>
										<h5 class="card-title">${good.title}</h5>
										<button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
									</div>
								</div>
        `;
        goodsWrapper.appendChild(card);
    });   
}
function renderCatalog(){
   const cards = document.querySelectorAll('.goods .card'),
   catalogList = document.querySelector('.catalog-list'),
   catalogBtn = document.querySelector('.catalog-button'),
   filterTitle = document.querySelector('.filter-title h5'),
   catalogWrapper = document.querySelector('.catalog');
   const categories = new Set(); //–∫–æ–ª–ª–µ–∫—Ü–∏—è, –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
   cards.forEach((card) => {
       categories.add(card.dataset.category);
   });
   categories.forEach((item)=>{
       const li = document.createElement('li');
       li.textContent = item;
       catalogList.appendChild(li);
   });
   const allLi = catalogList.querySelectorAll('li');
   catalogBtn.addEventListener('click', (event) => {
        if(catalogWrapper.style.display){
           catalogWrapper.style.display = '';
        } else{
           catalogWrapper.style.display = 'block';
        }
        if(event.target.tagName ==='LI'){
            
            allLi.forEach((elem)=>{
                if(elem===event.target){
                    elem.classList.add('active');
                }
                else{
                    elem.classList.remove('active');
                }
            });
            filterTitle.textContent = event.target.textContent;
            filter();
        }
   });
}


//end –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ 
getData().then((data) =>{
    renderCards(data);
    renderCatalog();
    toggleCheckbox(); 
    toggleCart();
    workCart();
    actionPage();
});
